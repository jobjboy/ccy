/**
 * Created by Administrator on 2017/9/16 0016.
 */
define(['jquery', 'mui', 'URL', 'base64'], function ($, mui, URL, base64) {


    return {

        /**
         * 获取token
         */
        checkToken: function (account, password,cpu,mac,callbak) {

            var url = URL.API_URL + URL.GET_TOKEN;
//          var cpu = cpu.replace(/\s+/g, "");
//          var mac = mac.replace(/\s+/g, "");
            console.log(cpu+'=>'+mac);
            url = url.format(account, password,'1',cpu,mac); 
            console.log(url);
            this.ajax(url, {}, function (data) {
				
                if (data.status == 1) {
                    localStorage.setItem("account", account);
                    localStorage.setItem("aut_token", data.result.aut_token);
                    localStorage.setItem('areas',JSON.stringify(data.result.model_data.areas));
                    callbak();
                } else {
                    mui.toast(data.msg, {duration: 'long', type: 'div'});
                }
            }, function () {
            }, 'GET');
        },

        getToken: function () {
            return localStorage.getItem('aut_token');
        },

        /**
         * 基于ajax的再次封装
         * @param url
         * @param data
         * @param success
         * @param cache
         * @param alone
         * @param async
         * @param type
         * @param dataType
         * @param error
         * @returns {boolean}
         */
        ajax: function (url, data, success, error, type, cache, alone, async, dataType) {
            var type = type || 'post';//请求类型
            var dataType = dataType || 'json';//接收数据类型
            var async = async || true;//异步请求
            var alone = alone || false;//独立提交（一次有效的提交）
            var cache = cache || false;//浏览器历史缓存
            var success = success || function (data) {

                    /*console.log('请求成功');*/

                    setTimeout(function () {
                        mui.toast(data.msg);//通过layer插件来进行提示信息
                    }, 500);
                    if (data.status) {//服务器处理成功
                        setTimeout(function () {
                            if (data.url) {
                                location.replace(data.url);
                            } else {
                                location.reload(true);
                            }
                        }, 1500);
                    } else {//服务器处理失败
                        if (alone) {//改变ajax提交状态
                            ajaxStatus = true;
                        }
                    }
                };
            var error = error || function (data) {

                    setTimeout(function () {
                        if (data.status == 404) {
                            mui.toast("请求失败，请求未找到", {duration: 'long', type: 'div'});

                        } else if (data.status == 503) {

                            mui.toast("请求失败，服务器内部错误", {duration: 'long', type: 'div'});

                        } else {
                            mui.toast("网络连接超时", {duration: 'long', type: 'div'});
                        }
                        ajaxStatus = true;
                    }, 500);
                };

            var ajaxStatus = true;

            /*判断是否可以发送请求*/
            if (!ajaxStatus) {
                return false;
            }
            var ajaxStatus = false;//禁用ajax请求

            if (!alone) {
                setTimeout(function () {
                    ajaxStatus = true;
                }, 1000);
            }
            $.ajax({
                'url': url,
                'data': data,
                'type': type,
                'dataType': dataType,

                //共用参数
//              contentType: "application/json; charset=utf-8",
//              headers: {
//
//                  "Access-Control-Allow-Headers": "Authorization",
//                  "Authorization": 'Basic ' + base64.btoa(localStorage.getItem('account') + ":" + localStorage.getItem('aut_token'))
//
//                  Authorization: 'Basic emh1Z2VsaWFuZzpiZmZlYmY3OC04ODZlLTQyNzYtYjBmNi0zY2VkMDkwOTU5NDQ6MQ==',
//              },
                'async': async,
                'success': success,
                'error': error,
                'jsonpCallback': 'jsonp' + (new Date()).valueOf().toString().substr(-4),
                'beforeSend': function () {

                },
            });

        },


        /**
         * submitAjax(post方式提交)
         * @param form
         * @param success
         * @param cache
         * @param alone
         */
        submitAjax: function (form, success, cache, alone) {
            cache = cache || true;
            var form = $(form);
            var url = form.attr('action');
            var data = form.serialize();
            this.ajax(url, data, success, cache, alone, false, 'post', 'json');
        },
        /**
         * 执行设备控制指令
         * @param url
         * @param args
         * @param cllback
         */
        executeCmd: function (args, success, error) {

            var url = URL.executecontrolcmd.action;

           // setTimeout(function () {
                this.ajax(url, args, function (data) {

                    if (data.status == 1) {
                        success();
                    } else {

                        mui.toast('执行设备指令失败', {
                            duration: 'long',
                            type: 'div'
                        });

                    }
                }, error, 'POST');
           // },300)
        }
    };

});